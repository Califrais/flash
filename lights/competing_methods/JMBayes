library(JMbayes)

# estimation
fit <- function(data, data.id, time_dep_feat, time_indep_feat) {
    # update account several shared associations
    ## calibration with indepedent estimation of both longitudinal and survival model
    mixed_form <- list()
    families <- list()
    for(i in 1:length(time_dep_feat)){
        mixed_form[[i]] <- as.formula(paste(time_dep_feat[[i]], " ~ T_long + (T_long | id)"))
        families[[i]] <- gaussian
    }
    MixedModelFit <- mvglmer(mixed_form, data = data, families = families)
    surv_form <- as.formula(paste("Surv(T_survival, delta) ~ ", paste(time_indep_feat, collapse = ' + ')))
    CoxFit <- coxph(surv_form, data = data.id, model = TRUE)

    ## estimation of Multivariate Joint Model
    jmbayes_mv <- mvJointModelBayes(MixedModelFit, CoxFit, timeVar = "T_long")

    return(jmbayes_mv)
}


score <- function(trained_model, data, data_id, t_max) {

    # predictive marker
    data$delta[which(data$T_survival> t_max)] <- 0
    data$T_survival[which(data$T_survival > t_max)] <- t_max
    pbc2_jmbayes_pred <- survfitJM(object = trained_model, newdata = data,
    last.time= t_max, survTimes = t_max+2, idVar = "id")
    pbc2_jmbayes_pred

    return(pbc2_jmbayes_pred)
}
